#
#   Windows CE 
#
defineComponent() {
	local path

    [ $KIND = "BUILD" -a $BLD_CROSS = 1 ] && return 0

    path=`probe --dir --path "$1" --base "VC/ce/include/altcecrt.h"`
    configureComponent --name "ce" --path "$path" --emitter emitCeOptions

    [ $KIND = HOST ] && setCeEnv
}


setCeEnv()
{
    local VS os cpu BIN LIB search cc VS VS_DOS

    eval VS=\$CFG_${KIND}_CE
    eval os=\$BLD_${KIND}_OS
    eval cpu=\$BLD_${KIND}_CPU

	case $cpu in
	arm)
		BIN=x86_arm
		LIB=armv4
		;;
	i?86|pentium)
		BIN=x86_cex86
		LIB=x86
		;;
	mips)
		BIN=x86_mips
		LIB=mipsii
		;;
	sh)
		BIN=x86_sh
		LIB=sh4
		;;
	esac

	#
	#	Update search path for base tools to use
	#
    search="
		'$VS/VC/ce/bin/$BIN'
	"
	SEARCH_PATH="`convertSearchPath "$search"`:$SEARCH_PATH"
	VS=`cygpath -u "$VS"`
    VS_DOS=`cygpath -m "$VS"`

	#
	#   Visual Studio 2005 with CE
	#
	CFG_HOST_PATH="$VS/VC/ce/bin/$BIN"
	CFG_HOST_INCLUDE="$VS_DOS/VC/ce/include;$VS/SmartDevices/SDK/$BLD_FEATURE_DEVICE/include"
	CFG_HOST_LIB="$VS_DOS/VC/ce/lib/$LIB;$VS/SmartDevices/SDK/$BLD_FEATURE_DEVICE/Lib"
}

emitCeOptions() {
#   eval echo BLD_CC_MSCL=\$${KIND}_HAS_MSCL
#   eval echo BLD_CC_CL_VERSION=\$${KIND}_MSCL_VERSION
	:
}

