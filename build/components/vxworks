#
#   VxWorks
#
defineComponent() {
	local name path partial

    if [ $KIND = "BUILD" -a $BLD_CROSS = 1 ] ; then
        echo "only used as a host component"
        return 0
    fi

    if [ "$WIND_BASE" != "" ] ; then
        if [ "$WIND_HOME" = "" ] ; then
            WIND_HOME=${WIND_BASE%/*}
        fi
        if [ "$WIND_PLATFORM" = "" ] ; then
            WIND_PLATFORM=${WIND_BASE##*/}
        fi
    fi
    search="$path:$WIND_BASE:$SEARCH_PATH"

    partial="target/h/vxWorks.h"
    path=`probe --emit-dir --path "$1" --partial "$partial" --search "$search" vxworks`
    if [ "$path" = "" ] ; then
        warnComponent vxworks \
            "Set WIND_HOME to the VxWorks directory containing the \"target\" directory (${partial})\n" \
            "This is usually /Tornado or /WindRiver/VxWorks\n"
        return
	fi
    if [ "$BLD_CC_DIAB" != 1 ] ; then
        configureComponent --path "$path" --iflags "-I$path/target/h -I$path/target/h/wrn/coreip" vxworks
    else
        configureComponent --path "$path" --iflags "-I$path/target/h -I$path/target/h/wrn/coreip -I$path/target/usr/h" vxworks
    fi
    setVxEnv "$path"
}


setVxEnv()
{
    local file cc version file cc bldPath  path search

	path="$1"
	WIND_BASE="$path"
    WIND_PLATFORM=${WIND_BASE##*/}

    case $BLD_BUILD_OS in
    WIN|CYGWIN)
        WIND_HOST_TYPE=x86-win32
        ;;
    LINUX)
        if [ -x $path/host/x86-linux ] ; then
            WIND_HOST_TYPE=x86-linux
        elif [ -x $path/host/x86-linux2 ] ; then
            WIND_HOST_TYPE=x86-linux2
        else
            echo "Can't determine WIND_HOST_TYPE: $path"
            exit 255
        fi
        ;;
    SOLARIS*)
        WIND_HOST_TYPE=solaris2
        ;;
    *)
        echo "$BLD_BUILD_OS is an not a supported O/S for VxWorks cross compilation"
        exit 255
        ;;
    esac

    version="$CFG_HOST_VXWORKS"/target/h/version.h
    if [ -f "$version" ] ; then
        if grep 'RUNTIME_VERSION' $version >/dev/null 2>&1 ; then
            version=`grep '^#define.RUNTIME_VERSION' "$version" | awk '{ print $3 }'`
        else
            version=`grep '^#define.VXWORKS_VERSION' "$version" | awk '{ print $3 }'`
        fi
        version=`echo $version | sed 's/"//g'`
    else
        echo "Cant find version.h at $version"
        exit 255
    fi
    BLD_HOST_DIST=WindRiver
    BLD_HOST_DIST_VER=$version

	#
	#	Tornado sets both HOME and BASE to /tornado
	#	Workbench sets BASE to /WindRiver/vxworks-6.3 and HOME to /WindRiver
	#
	if [ "${version%.*}" -ge 6 ] ; then
		WIND_HOME="${path%/*}"
        eval WIND_GNU_PATH=`echo $WIND_HOME/gnu/*-${WIND_PLATFORM}`
        search="
            '\$WIND_GNU_PATH/\$WIND_HOST_TYPE/bin'
            '\$WIND_GNU_PATH/\$WIND_HOST_TYPE/\$BLD_HOST_SYSTEM/bin'
            '\$WIND_BASE/host/\$WIND_HOST_TYPE/bin'
            '\$WIND_BASE/host/resource/hutils/tcl'
            '\$WIND_HOME/workbench*/foundation/*/\$WIND_HOST_TYPE/bin'
        "
	else
		WIND_HOME="$path"
        WIND_GNU_PATH
        search="
            '\$WIND_BASE/host/\$WIND_HOST_TYPE/bin'
            '\$WIND_BASE/host/resource/hutils/tcl'
            '\$WIND_HOME/workbench*/foundation/*/\$WIND_HOST_TYPE/bin'
        "
	fi
    BLD_BUILD_SYSTEM_VX=$WIND_HOST_TYPE

	SEARCH_PATH="$SEARCH_PATH:`convertSearchPath "$search"`"

	#
	#	If VxWorks 6.3, all X86 tools have "pentium" extension
	#
	if [ "${version%.*}" -gt 5 -a "$BLD_HOST_CPU_ARCH" = MPR_CPU_IX86 ] ; then
		BLD_HOST_CPU=pentium
		KIND=HOST . build/config/config.VXWORKS
	fi

	#
	#	Export so the "cc" component file can actually run the compiler
	#
    export WIND_HOME WIND_BASE WIND_HOST_TYPE WIND_PLATFORM WIND_GNU_PATH

	eval BLD_${kind}_IFLAGS=\"$BLD_HOST_IFLAGS $CFG_HOST_VXWORKS_IFLAGS\"
}
